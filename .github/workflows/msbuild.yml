---
name: Testing

# yamllint disable-line rule:truthy
on:
  push:
  pull_request:

jobs:

  binaries_windows:
    name: Binaries for Windows
    runs-on: windows-2016

    strategy:
      matrix:
        arch: [Win32, x64]

        include:
          # Prettier run names.
          - {os: windows-2016, name: VS 2017}

    defaults:
      run:
        shell: pwsh

    steps:
      - uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Fix Checkout
        run: |
          git fetch --force --tags

      - name: Configure and Build
        run: |
          New-Item -ItemType "directory" -Path ${{ matrix.arch }} -Force
          cd ${{ matrix.arch }}
          cmake.exe -G "Visual Studio 15 2017" -A ${{ matrix.arch }} -S ..  -B .
          MSBuild.exe edge.vcxproj /t:Build /p:Configuration=Release
          MSBuild.exe supernode.vcxproj /t:Build /p:Configuration=Release
          MSBuild.exe n2n-benchmark.vcxproj /t:Build /p:Configuration=Release

      - name: Create binary dir
        run: |
          mkdir binaries
          cp -r ${{ matrix.arch }} binaries/

      - name: Upload binary artifacts
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: binaries



  # Given the clearly documented use of annotated tags to signal releases,
  # it seems strange that there is no simple way to trigger actions if the
  # tag is annotated.  So we need to jump through some extra hoops.
  #
  # Looking at https://github.com/actions/checkout/issues/290 seems to show
  # that github just doesnt care about how git expects annotated tags to be
  # used.
  #
  # This workflow has added a `git fetch --force --tags` to every job that
  # needs to have working tags

  upload_release:
    name: Upload Release Assets
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - binaries_windows
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Fix Checkout
        run: |
          git fetch --force --tags

      - name: Get Tag Type
        id: get_tagtype
        run: |
          TYPE=$(git cat-file -t $GITHUB_REF)
          echo "::set-output name=TAGTYPE::$TYPE"
          echo ==========
          echo REF=$GITHUB_REF
          echo TAGTYPE=$TYPE

      - name: Fetch all Artifacts
        if: steps.get_tagtype.outputs.TAGTYPE == 'tag'
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Upload Assets to Release
        if: steps.get_tagtype.outputs.TAGTYPE == 'tag'
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          files: |
            artifacts/packages-dpkg/*.deb
            artifacts/packages-rpm/*.rpm
